[general]

output_file = "sim.out"

total_cores   = 16
num_processes = 1

enable_core_modeling  = true
enable_power_modeling = true
enable_area_modeling  = false
enable_shared_mem     = true

mode = full #(full, lite)

trigger_models_within_application = false

technology_node = 45   #(22, 32, 45 in nm)
max_frequency   = 2.0  #(in GHz)
temperature     = 300  #(in Kelvin)
tile_width      = 1.0  #(in millimeters), used by network perf & power models

[transport]
base_port = 2000

[log]
enabled          = false
stack_trace      = false
disabled_modules = ""
enabled_modules  = ""

[progress_trace]
enabled = false
interval = 5000

[clock_skew_management]
scheme = lax #(lax, lax_barrier, lax_p2p)

[clock_skew_management/lax_barrier]
quantum = 1000 #(in nanosec)

[clock_skew_management/lax_p2p]
quantum = 1000 #(in nanosec)
slack   = 1000 #(in nanosec)
sleep_fraction = 1.0

[stack]
stack_base          = 2415919104
stack_size_per_core = 2097152

[process_map]
process0  = "127.0.0.1"
process1  = "127.0.0.1"
process2  = "127.0.0.1"
process3  = "127.0.0.1"
process4  = "127.0.0.1"
process5  = "127.0.0.1"
process6  = "127.0.0.1"
process7  = "127.0.0.1"
process8  = "127.0.0.1"
process9  = "127.0.0.1"
process10 = "127.0.0.1"
process11 = "127.0.0.1"
process12 = "127.0.0.1"
process13 = "127.0.0.1"
process14 = "127.0.0.1"
process15 = "127.0.0.1"
process16 = "127.0.0.1"

[runtime_energy_modeling]
interval = 1000  #(in nanosec)
[runtime_energy_modeling/power_trace]
enabled = false

[dvfs]
domains = "<1.0, CORE, L1_ICACHE, L1_DCACHE, L2_CACHE, DIRECTORY, NETWORK_USER, NETWORK_MEMORY>"
synchronization_delay = 2  #(in cycles)

[tile]
model_list = "<default,iocoom,T1,T1,T1>"

[core]
[core/iocoom]
num_load_queue_entries  = 8
num_store_queue_entries = 8
speculative_loads_enabled         = true
multiple_outstanding_RFOs_enabled = true

[core/static_instruction_costs]
generic =  1
mov     =  1
ialu    =  1
imul    =  3
idiv    = 18
falu    =  3
fmul    =  5
fdiv    =  6
xmm_ss  =  6
xmm_sd  =  6
xmm_ps  =  6

[branch_predictor]
type = one_bit
mispredict_penalty = 14 #(in cycles)
size = 1024

[l1_icache/T1]
cache_line_size    = 64       #(in Bytes)
cache_size         = 16       #(in KB)
associativity      = 4
num_banks          = 1
replacement_policy = lru
data_access_time   = 1        #(in cycles)
tags_access_time   = 1        #(in cycles)
perf_model_type    = parallel #(parallel, sequential)
track_miss_types   = false

[l1_dcache/T1]
cache_line_size    = 64       #(in Bytes)
cache_size         = 32       #(in KB)
associativity      = 4
num_banks          = 1
replacement_policy = lru 
data_access_time   = 1        #(in cycles)
tags_access_time   = 1        #(in cycles)
perf_model_type    = parallel #(parallel,sequential)
track_miss_types   = false

[l2_cache/T1]
cache_line_size    = 64       #(in Bytes)
cache_size         = 512      #(in KB)
associativity      = 8
num_banks          = 2
replacement_policy = lru
data_access_time   = 8        #(in cycles)
tags_access_time   = 3        #(in cycles)
perf_model_type    = parallel #(parallel,sequential)
track_miss_types   = false

[caching_protocol]
type = pr_l1_pr_l2_dram_directory_msi
# pr_l1_pr_l2_dram_directory_msi
# pr_l1_pr_l2_dram_directory_mosi
# pr_l1_sh_l2_msi

[l2_directory]
max_hw_sharers = 64
directory_type = full_map #(full_map, limited_broadcast, limited_no_broadcast, ackwise, limitless)

[dram_directory]
total_entries = auto #(auto, numeric value(in cycles))
associativity = 16
max_hw_sharers = 64
directory_type = full_map #(full_map, limited_broadcast, limited_no_broadcast, ackwise, limitless)
access_time = auto #(auto, numeric value(in cycles))

[limitless]
software_trap_penalty = 200

[dram]
latency = 100                  #(in nanosec)
per_controller_bandwidth = 5   #(in GB/s)
num_controllers          = ALL #"ALL" is a Mm controller on every tile(/core)
controller_positions     = ""
[dram/queue_model]
enabled = true
type    = history_tree

[network]
# magic 
# emesh_hop_counter, emesh_hop_by_hop
# atac
# ornoc
user   = emesh_hop_counter
memory = ornoc
enable_shared_memory_shortcut = false

[network/emesh_hop_counter]
flit_width = 64                  #(in bits)
[network/emesh_hop_counter/router]
delay = 1                        #(in cycles)
num_flits_per_port_buffer = 4    #(#flits/output buffer/port)
[network/emesh_hop_counter/link]
delay = 1                        #(in cycles)
type = electrical_repeated

[network/emesh_hop_by_hop]
flit_width = 64                  #(in bits)
broadcast_tree_enabled = true
[network/emesh_hop_by_hop/router]
delay = 1                        #(in cycles)
num_flits_per_port_buffer = 4    #(#flits/output buffer/port)
[network/emesh_hop_by_hop/link]
delay = 1                        #(in cycles)
type = electrical_repeated
[network/emesh_hop_by_hop/queue_model]
enabled = true
type = history_tree

[network/atac]
flit_width = 64
cluster_size = 4                          #(#cores/cluster)
receive_network_type = star               #(htree, star)
num_receive_networks_per_cluster = 2      #(#receive networks/cluster)
num_optical_access_points_per_cluster = 4 #(#Optical Access Points/cluster)
global_routing_strategy = cluster_based   #(cluster_based, distance_based)
unicast_distance_threshold = 4
electrical_link_type = electrical_repeated #electrical_repeated
[network/atac/enet]
[network/atac/enet/router]
delay = 1                     #(In cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/atac/onet]
[network/atac/onet/send_hub]
[network/atac/onet/send_hub/router]
delay = 1                     #(in cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/atac/onet/receive_hub]
[network/atac/onet/receive_hub/router]
delay = 1                     #(in cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/atac/star_net]
[network/atac/star_net/router]
delay = 1                     #(in cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/atac/queue_model]
enabled = true
type = history_tree

[network/ornoc]
flit_width = 64
cluster_size = 4                          #(#cores/cluster)
receive_network_type = star               #(htree, star)
num_receive_networks_per_cluster = 2      #(#receive networks/cluster)
num_optical_access_points_per_cluster = 4 #(#Optical Access Points/cluster)
global_routing_strategy = cluster_based   #(cluster_based, distance_based)
unicast_distance_threshold = 4
electrical_link_type = electrical_repeated #electrical_repeated
[network/ornoc/enet]
[network/ornoc/enet/router]
delay = 1                     #(In cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/ornoc/onet]
[network/ornoc/onet/send_hub]
[network/ornoc/onet/send_hub/router]
delay = 1                     #(in cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/ornoc/onet/receive_hub]
[network/ornoc/onet/receive_hub/router]
delay = 1                     #(in cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/ornoc/star_net]
[network/ornoc/star_net/router]
delay = 1                     #(in cycles)
num_flits_per_port_buffer = 4 #(#Buffer flits/port)
[network/ornoc/queue_model]
enabled = true
type = history_tree

[link_model]
[link_model/optical]
waveguide_delay_per_mm = 10e-3 #(in nanosec)
E-O_conversion_delay = 1 #(in cycles)
O-E_conversion_delay = 1 #(in cycles)
laser_type           = standard #(standard, throttled)
laser_modes          = unicast  #(unicast, broadcast)
ring_tuning_strategy = athermal  #(full_thermal, thermal_reshuffle, electrical_assist, athermal)

[queue_model/basic]
moving_avg_enabled = true
moving_avg_window_size = 64
moving_avg_type = arithmetic_mean
[queue_model/history_list]
max_list_size = 100
analytical_model_enabled = true
interleaving_enabled = true
[queue_model/history_tree]
max_list_size = 100
analytical_model_enabled = true

[statistics_trace]
enabled = false
statistics = "cache_line_replication, network_utilization"
sampling_interval = 10000   #(in nanosec)
[statistics_trace/network_utilization]
enabled_networks = "memory" #(user, memory)
